<Window x:Class="Controls.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Controls"
        mc:Ignorable="d"
        Title="MainWindow" Height="827.716" Width="499.945"
        x:Name="Wnd_Main">
    <StackPanel>
        <!--Labels besitzen, wie die meisten Controls eine Content-Eigenschaft, welche mit weiteren Containern/Controls 
        befüllt werden können (Auch hier darf nur ein Root-Element vohanden sein).-->
        <Label Content="Hallo"
               Foreground="Blue"
               FontSize="30"
               HorizontalContentAlignment="Center"
               BorderBrush="Red"
               BorderThickness="2"/>

        <!--TextBlöcke sind Labels, welche auf Strings spezialisiert sind. Sie besitzen statt der
            Content- die Text-Property-->
        <TextBlock Text="Auch hallo"/>
        
        <!--Buttons können von den Usern angeklickt werden, wodurch das Click-Event ausgelöst wird (vgl. CB)-->
        <Button Content="Klick Mich"
                Click="Button_Click"/>
        
        <!--Seperatoren sind visuelle Abgrenzungen-->
        <Separator Margin="10"/>
        
        <!--Mittels des Image-Objekts können Grafiken angezeigt und formatiert werden-->
        <Image Source="C:\Users\kh2\Documents\ArbeitArbeit\Kurse\WPF\Material\ppedv.bmp"
               Stretch="Uniform"
               Height="100"/>
        
        <!--In einer Textbox kann der User Strings eingeben. Mittels AcceptsReturn wird die Return-Taste für Zeilenumbrüche
        freigegeben.-->
        <TextBox Text="Dies ist ein String in einer Textbox"
                 Height="100"
                 AcceptsReturn="True"
                 AcceptsTab="True"
                 TextWrapping="WrapWithOverflow"
                 VerticalScrollBarVisibility="Auto">
            <TextBox.ContextMenu>
                <!--Die meisten Steuerelemente haben eine ContextMenu-Property, in welche ein ContextMenu eingepflegt werden kann.-->
                <ContextMenu>
                    <MenuItem Header="Kopieren"/>
                    <MenuItem Header="Einfügen"/>
                </ContextMenu>
            </TextBox.ContextMenu>
        </TextBox>

        <!--ItemControls wie ComboBoxen oder ListViews können über die ItemsSource-Property mit Daten 
        oder in XAML mit Items mit Content-Property bestückt werden-->
        <ComboBox IsEditable="True"
                  x:Name="Cbb_Auswahl">
            <ComboBoxItem Content="Eintrag1"/>
            <ComboBoxItem Content="Auswahl2"/>
            <ComboBoxItem Content="Item3"/>
        </ComboBox>
        
        <!--Checkboxen sind visuelle Repräsentationen von boolschen Werten. Mittels IsThreeState kann eine Checkbox einen von DREI
        unterschiedlichen Zuständen annehmen.-->
        <CheckBox Content="Hak mich ab"
                  IsChecked="{x:Null}"
                  IsThreeState="True"/>

        <!--RadioButtons können einer Group zugeordnet werden, wodurch nur einer der Buttons dieser Gruppe angewählt sein darf-->
        <RadioButton Content="Auswahl1" GroupName="radiobuttons"/>
        <RadioButton Content="Auswahl2" GroupName="radiobuttons"/>
        <RadioButton Content="Auswahl3" GroupName="radiobuttons1"/>
        
        <!--Mittels Slidern kann der User einen numerischen Wert im definierten Bereich auswählen. Die Ticks geben dabei Hilfestellung
        und definieren die auswählbareb Zahlenwerte.-->
        <Slider x:Name="Slr_Bsp"
                Minimum="0"
                Maximum="100"
                Value="25"
                TickPlacement="BottomRight"
                IsSnapToTickEnabled="True"
                TickFrequency="0.5"/>
        
        <!--Mittels der ProgressBar können prozentuale Fortschritte visualisiert werden. Mit IsIndeterminate kann ein bewegender Balken
        dargestellt werden.-->
        <ProgressBar Minimum="0"
                     Maximum="100"
                     Value="50"
                     Height="20"
                     IsIndeterminate="True"
                     Foreground="Blue"/>
        
        <!--Menüs, wie ein Fenster-Menü (Menu) oder ein Kontext-Menü (ContextMenu) werden mit MenuItems befüllt.
        Diese können ihrerseits weitere MenuItems aufnehmen, wodurch sich dann Untermenüs bilden-->
        <Menu>
            <MenuItem Header="Datei">
                <MenuItem Header="Speichern" Click="MenuItem_Click"/>
                <MenuItem Header="Ebene1">
                    <MenuItem Header="Ebene2">
                        <MenuItem Header="Ebene3"/>
                    </MenuItem>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Bearbeiten"/>
        </Menu>

        <!--Ribbons sind die 'neuen' MS-Menüs. Sie sind zu finden unter dem Namespace System.Windows.Controls.Ribbon-->
        <Ribbon>
            <Ribbon.ApplicationMenu>
                <RibbonApplicationMenu>
                    <RibbonApplicationMenuItem Header="Speichern"/>
                </RibbonApplicationMenu>
            </Ribbon.ApplicationMenu>
            <RibbonTab Header="Kopieren und Co">
                <RibbonGroup Header="Einfügen und so">
                    <RibbonButton Content="Kopieren" Height="50" Width="50"/>
                </RibbonGroup>
            </RibbonTab>
        </Ribbon>
    </StackPanel>
</Window>
